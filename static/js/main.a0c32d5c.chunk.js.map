{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","firestore","storageService","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","e","preventDefault","update","key","className","placeholder","value","onChange","target","required","autoFocus","type","onClick","src","alt","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","event","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","displayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggned","maxWidth","width","margin","path","exact","component","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0c32d5c.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebaseInstance.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Nweet({ nweetObj, isOwner }) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweet/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`nweet/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div key={nweetObj.id} className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              onChange={onChange}\r\n              required\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} alt=\"\" />\r\n          )}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nfunction Home({ userObj }) {\r\n  const [nweets, setNweets] = useState([]);\r\n  // const getNweets = async () => {\r\n  //   const dbNweets = await dbService.collection(\"nweet\").get();\r\n  //   dbNweets.forEach((document) => {\r\n  //     const object = {\r\n  //       ...document.data(),\r\n  //       id: document.id,\r\n  //     };\r\n  //     setNweets((prev) => [object, ...prev]);\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // getNweets();\r\n    dbService.collection(\"nweet\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={userObj.uid === nweet.creatorId}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction AuthForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nfunction Auth() {\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Profile({ refreshUser, userObj }) {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweet\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          autoFocus\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Navigation({ userObj }) {\r\n  console.log(userObj);\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nfunction AppRouter({ refreshUser, isLoggned, userObj }) {\r\n  return (\r\n    <Router>\r\n      {isLoggned && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggned ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route path=\"/\" exact>\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route path=\"/profile\" exact>\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route path=\"/\" component={Auth} exact />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/AppRouter\";\nimport { authService } from \"fbase\";\nimport { auth } from \"firebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        //setUserObj(user);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggned={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}